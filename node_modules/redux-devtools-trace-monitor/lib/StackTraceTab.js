"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _getStackFrames = require("./react-error-overlay/utils/getStackFrames");

var _StackTrace = _interopRequireDefault(require("./react-error-overlay/containers/StackTrace"));

var _openFile = _interopRequireDefault(require("./openFile"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var rootStyle = {
  padding: '5px 10px'
};

var StackTraceTab = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(StackTraceTab, _Component);

  var _super = _createSuper(StackTraceTab);

  function StackTraceTab(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, StackTraceTab);
    _this = _super.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onStackLocationClicked", function () {
      var fileLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      // console.log("Stack location args: ", ...args);
      var fileName = fileLocation.fileName,
          lineNumber = fileLocation.lineNumber;

      if (fileName && lineNumber) {
        var matchingStackFrame = _this.state.stackFrames.find(function (stackFrame) {
          var matches = stackFrame._originalFileName === fileName && stackFrame._originalLineNumber === lineNumber || stackFrame.fileName === fileName && stackFrame.lineNumber === lineNumber;
          return matches;
        }); // console.log("Matching stack frame: ", matchingStackFrame);


        if (matchingStackFrame) {
          /*
          const frameIndex = this.state.stackFrames.indexOf(matchingStackFrame);
          const originalStackFrame = parsedFramesNoSourcemaps[frameIndex];
          console.log("Original stack frame: ", originalStackFrame);
          */
          _this.props.openFile(fileName, lineNumber, matchingStackFrame);
        }
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "openDocs", function (e) {
      e.stopPropagation();
      window.open('https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Features/Trace.md');
    });
    _this.state = {
      stackFrames: []
    };
    return _this;
  }

  (0, _createClass2["default"])(StackTraceTab, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // console.log("StackTraceTab mounted");
      this.checkForStackTrace();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var action = prevProps.action,
          actions = prevProps.actions;

      if (action !== this.props.action || actions !== this.props.actions) {
        this.checkForStackTrace();
      }
    }
  }, {
    key: "checkForStackTrace",
    value: function checkForStackTrace() {
      var _this2 = this;

      var _this$props = this.props,
          action = _this$props.action,
          liftedActionsById = _this$props.actions;

      if (!action) {
        return;
      }

      var liftedActions = Object.values(liftedActionsById);
      var liftedAction = liftedActions.find(function (liftedAction) {
        return liftedAction.action === action;
      });

      if (liftedAction && typeof liftedAction.stack === 'string') {
        var deserializedError = Object.assign(new Error(), {
          stack: liftedAction.stack
        });
        (0, _getStackFrames.getStackFrames)(deserializedError).then(function (stackFrames) {
          /* eslint-disable no-console */
          if (process.env.NODE_ENV === 'development') console.log('Stack frames: ', stackFrames);
          /* eslint-enable no-console */

          _this2.setState({
            stackFrames: stackFrames,
            currentError: deserializedError
          });
        });
      } else {
        this.setState({
          stackFrames: [],
          showDocsLink: liftedAction.action && liftedAction.action.type && liftedAction.action.type !== '@@INIT'
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          stackFrames = _this$state.stackFrames,
          showDocsLink = _this$state.showDocsLink;

      if (showDocsLink) {
        return /*#__PURE__*/_react["default"].createElement("div", {
          style: rootStyle
        }, "To enable tracing action calls, you should set `trace` option to `true` for Redux DevTools enhancer. Refer to", ' ', /*#__PURE__*/_react["default"].createElement("a", {
          href: "#",
          onClick: this.openDocs
        }, "this page"), ' ', "for more details.");
      }

      return /*#__PURE__*/_react["default"].createElement("div", {
        style: rootStyle
      }, /*#__PURE__*/_react["default"].createElement(_StackTrace["default"], {
        stackFrames: stackFrames,
        errorName: "N/A",
        contextSize: 3,
        editorHandler: this.onStackLocationClicked
      }));
    }
  }]);
  return StackTraceTab;
}(_react.Component);

exports["default"] = StackTraceTab;
(0, _defineProperty2["default"])(StackTraceTab, "defaultProps", {
  openFile: _openFile["default"]
});