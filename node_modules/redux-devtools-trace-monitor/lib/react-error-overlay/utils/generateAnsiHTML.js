"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _anser = _interopRequireDefault(require("anser"));

var _reduxDevtoolsThemes = require("redux-devtools-themes");

var _htmlEntities = require("html-entities");

/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var entities = new _htmlEntities.AllHtmlEntities();
var anserMap = {
  'ansi-bright-black': _reduxDevtoolsThemes.nicinabox.base03,
  'ansi-bright-yellow': _reduxDevtoolsThemes.nicinabox.base0A,
  'ansi-yellow': _reduxDevtoolsThemes.nicinabox.base0B,
  'ansi-bright-green': _reduxDevtoolsThemes.nicinabox.base0B,
  'ansi-green': _reduxDevtoolsThemes.nicinabox.base0F,
  'ansi-bright-cyan': _reduxDevtoolsThemes.nicinabox.base0D,
  'ansi-cyan': _reduxDevtoolsThemes.nicinabox.base0C,
  'ansi-bright-red': _reduxDevtoolsThemes.nicinabox.base09,
  'ansi-red': _reduxDevtoolsThemes.nicinabox.base0E,
  'ansi-bright-magenta': _reduxDevtoolsThemes.nicinabox.base0F,
  'ansi-magenta': _reduxDevtoolsThemes.nicinabox.base0E,
  'ansi-white': _reduxDevtoolsThemes.nicinabox.base00
};

function generateAnsiHTML(txt) {
  var arr = new _anser["default"]().ansiToJson(entities.encode(txt), {
    use_classes: true
  });
  var result = '';
  var open = false;

  for (var index = 0; index < arr.length; ++index) {
    var c = arr[index];
    var content = c.content,
        fg = c.fg;
    var contentParts = content.split('\n');

    for (var _index = 0; _index < contentParts.length; ++_index) {
      if (!open) {
        result += '<span data-ansi-line="true">';
        open = true;
      }

      var part = contentParts[_index].replace('\r', '');

      var color = anserMap[fg];

      if (color != null) {
        result += '<span style="color: ' + color + ';">' + part + '</span>';
      } else {
        if (fg != null) {
          console.log('Missing color mapping:', fg); // eslint-disable-line no-console
        }

        result += '<span>' + part + '</span>';
      }

      if (_index < contentParts.length - 1) {
        result += '</span>';
        open = false;
        result += '<br/>';
      }
    }
  }

  if (open) {
    result += '</span>';
    open = false;
  }

  return result;
}

var _default = generateAnsiHTML;
exports["default"] = _default;