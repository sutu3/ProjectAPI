"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStackFrames = getStackFrames;
exports["default"] = void 0;

var _parser = require("./parser");

var _mapper = require("./mapper");

var _unmapper = require("./unmapper");

var _presets = require("../../presets");

/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function getStackFrames(error) {
  var unhandledRejection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var contextSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
  var parsedFrames = (0, _parser.parse)(error);
  var enhancedFramesPromise;

  if (error.__unmap_source) {
    enhancedFramesPromise = (0, _unmapper.unmap)( // $FlowFixMe
    error.__unmap_source, parsedFrames, contextSize);
  } else {
    enhancedFramesPromise = (0, _mapper.map)(parsedFrames, contextSize);
  }

  return enhancedFramesPromise.then(function (enhancedFrames) {
    /*
    if (
      enhancedFrames
        .map(f => f._originalFileName)
        .filter(f => f != null && f.indexOf('node_modules') === -1).length === 0
    ) {
      return null;
    }
    */
    return enhancedFrames.filter(function (_ref) {
      var functionName = _ref.functionName,
          fileName = _ref.fileName;
      return (functionName == null || functionName.indexOf('__stack_frame_overlay_proxy_console__') === -1) && !_presets.toExclude.test(fileName);
    });
  });
}

var _default = getStackFrames;
exports["default"] = _default;