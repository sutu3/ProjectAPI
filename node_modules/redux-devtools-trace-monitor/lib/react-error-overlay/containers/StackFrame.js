"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _StackFrameCodeBlock = _interopRequireDefault(require("./StackFrameCodeBlock"));

var _getPrettyURL = require("../utils/getPrettyURL");

var _reduxDevtoolsThemes = require("redux-devtools-themes");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var linkStyle = {
  fontSize: '0.9em',
  marginBottom: '0.9em'
};
var anchorStyle = {
  textDecoration: 'none',
  color: _reduxDevtoolsThemes.nicinabox.base05,
  cursor: 'pointer'
};
var codeAnchorStyle = {
  cursor: 'pointer'
};
var toggleStyle = {
  marginBottom: '1.5em',
  color: _reduxDevtoolsThemes.nicinabox.base05,
  cursor: 'pointer',
  border: 'none',
  display: 'block',
  width: '100%',
  textAlign: 'left',
  background: 'transparent',
  fontFamily: 'Consolas, Menlo, monospace',
  fontSize: '1em',
  padding: '0px',
  lineHeight: '1.5'
};

var StackFrame = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(StackFrame, _Component);

  var _super = _createSuper(StackFrame);

  function StackFrame() {
    var _this;

    (0, _classCallCheck2["default"])(this, StackFrame);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      compiled: false
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "toggleCompiled", function () {
      _this.setState(function (state) {
        return {
          compiled: !state.compiled
        };
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "editorHandler", function () {
      var errorLoc = _this.getErrorLocation();

      if (!errorLoc) {
        return;
      }

      _this.props.editorHandler(errorLoc);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onKeyDown", function (e
    /* : SyntheticKeyboardEvent<> */
    ) {
      if (e.key === 'Enter') {
        _this.editorHandler();
      }
    });
    return _this;
  }

  (0, _createClass2["default"])(StackFrame, [{
    key: "getErrorLocation",
    value: function getErrorLocation() {
      var _this$props$frame = this.props.frame,
          fileName = _this$props$frame._originalFileName,
          lineNumber = _this$props$frame._originalLineNumber; // Unknown file

      if (!fileName) {
        return null;
      } // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"


      var isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;

      if (isInternalWebpackBootstrapCode) {
        return null;
      } // Code is in a real file


      return {
        fileName: fileName,
        lineNumber: lineNumber || 1
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          frame = _this$props.frame,
          contextSize = _this$props.contextSize,
          critical = _this$props.critical,
          showCode = _this$props.showCode;
      var fileName = frame.fileName,
          lineNumber = frame.lineNumber,
          columnNumber = frame.columnNumber,
          scriptLines = frame._scriptCode,
          sourceFileName = frame._originalFileName,
          sourceLineNumber = frame._originalLineNumber,
          sourceColumnNumber = frame._originalColumnNumber,
          sourceLines = frame._originalScriptCode;
      var functionName = frame.getFunctionName();
      var compiled = this.state.compiled;
      var url = (0, _getPrettyURL.getPrettyURL)(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
      var codeBlockProps = null;

      if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) {
          codeBlockProps = {
            lines: scriptLines,
            lineNum: lineNumber,
            columnNum: columnNumber,
            contextSize: contextSize,
            main: critical
          };
        } else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) {
          codeBlockProps = {
            lines: sourceLines,
            lineNum: sourceLineNumber,
            columnNum: sourceColumnNumber,
            contextSize: contextSize,
            main: critical
          };
        }
      }

      var canOpenInEditor = this.getErrorLocation() !== null && this.props.editorHandler !== null;
      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", null, functionName), /*#__PURE__*/_react["default"].createElement("div", {
        style: linkStyle
      }, /*#__PURE__*/_react["default"].createElement("span", {
        style: canOpenInEditor ? anchorStyle : null,
        onClick: canOpenInEditor ? this.editorHandler : null,
        onKeyDown: canOpenInEditor ? this.onKeyDown : null,
        tabIndex: canOpenInEditor ? '0' : null
      }, url)), codeBlockProps && /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement("span", {
        onClick: canOpenInEditor ? this.editorHandler : null,
        style: canOpenInEditor ? codeAnchorStyle : null
      }, /*#__PURE__*/_react["default"].createElement(_StackFrameCodeBlock["default"], codeBlockProps)), /*#__PURE__*/_react["default"].createElement("button", {
        style: toggleStyle,
        onClick: this.toggleCompiled
      }, 'View ' + (compiled ? 'source' : 'compiled'))));
    }
  }]);
  return StackFrame;
}(_react.Component);

var _default = StackFrame;
exports["default"] = _default;