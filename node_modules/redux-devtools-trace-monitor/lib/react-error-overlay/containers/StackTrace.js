"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _StackFrame = _interopRequireDefault(require("./StackFrame"));

var _Collapsible = _interopRequireDefault(require("../components/Collapsible"));

var _isInternalFile = require("../utils/isInternalFile");

var _isBultinErrorName = require("../utils/isBultinErrorName");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var traceStyle = {
  fontSize: '1em',
  flex: '0 1 auto',
  minHeight: '0px',
  overflow: 'auto'
};

var StackTrace = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(StackTrace, _Component);

  var _super = _createSuper(StackTrace);

  function StackTrace() {
    (0, _classCallCheck2["default"])(this, StackTrace);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(StackTrace, [{
    key: "renderFrames",
    value: function renderFrames() {
      var _this$props = this.props,
          stackFrames = _this$props.stackFrames,
          errorName = _this$props.errorName,
          contextSize = _this$props.contextSize,
          editorHandler = _this$props.editorHandler;
      var renderedFrames = [];
      var hasReachedAppCode = false,
          currentBundle = [],
          bundleCount = 0,
          anyNodeExpanded = false;
      stackFrames.forEach(function (frame, index) {
        var fileName = frame.fileName,
            sourceFileName = frame._originalFileName;
        var isInternalUrl = (0, _isInternalFile.isInternalFile)(sourceFileName, fileName);
        var isThrownIntentionally = !(0, _isBultinErrorName.isBultinErrorName)(errorName);
        var shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);

        if (!shouldCollapse) {
          anyNodeExpanded = true;
        }

        if (!isInternalUrl) {
          hasReachedAppCode = true;
        }

        var frameEle = /*#__PURE__*/_react["default"].createElement(_StackFrame["default"], {
          key: 'frame-' + index,
          frame: frame,
          contextSize: contextSize,
          critical: index === 0,
          showCode: !shouldCollapse,
          editorHandler: editorHandler
        });

        var lastElement = index === stackFrames.length - 1;

        if (shouldCollapse) {
          currentBundle.push(frameEle);
        }

        if (!shouldCollapse || lastElement) {
          if (currentBundle.length === 1) {
            renderedFrames.push(currentBundle[0]);
          } else if (currentBundle.length > 1) {
            bundleCount++;
            renderedFrames.push( /*#__PURE__*/_react["default"].createElement(_Collapsible["default"], {
              collapsedByDefault: anyNodeExpanded,
              key: 'bundle-' + bundleCount
            }, currentBundle));
          }

          currentBundle = [];
        }

        if (!shouldCollapse) {
          renderedFrames.push(frameEle);
        }
      });
      return renderedFrames;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement("div", {
        style: traceStyle
      }, this.renderFrames());
    }
  }]);
  return StackTrace;
}(_react.Component);

var _default = StackTrace;
exports["default"] = _default;