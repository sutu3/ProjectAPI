"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _function = _interopRequireDefault(require("react-pure-render/function"));

var themes = _interopRequireWildcard(require("redux-devtools-themes"));

var _reduxDevtools = require("redux-devtools");

var _deepmerge = _interopRequireDefault(require("deepmerge"));

var _reducers = _interopRequireDefault(require("./reducers"));

var _Chart = _interopRequireDefault(require("./Chart"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var reset = _reduxDevtools.ActionCreators.reset,
    rollback = _reduxDevtools.ActionCreators.rollback,
    commit = _reduxDevtools.ActionCreators.commit,
    sweep = _reduxDevtools.ActionCreators.sweep,
    toggleAction = _reduxDevtools.ActionCreators.toggleAction;
var styles = {
  container: {
    fontFamily: 'monaco, Consolas, Lucida Console, monospace',
    position: 'relative',
    overflowY: 'hidden',
    width: '100%',
    height: '100%',
    minWidth: 300
  }
};

function invertColors(theme) {
  return _objectSpread(_objectSpread({}, theme), {}, {
    base00: theme.base07,
    base01: theme.base06,
    base02: theme.base05,
    base03: theme.base04,
    base04: theme.base03,
    base05: theme.base02,
    base06: theme.base01,
    base07: theme.base00
  });
}

var ChartMonitor = /*#__PURE__*/function (_Component) {
  _inherits(ChartMonitor, _Component);

  var _super = _createSuper(ChartMonitor);

  function ChartMonitor(props) {
    var _this;

    _classCallCheck(this, ChartMonitor);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "shouldComponentUpdate", _function["default"]);

    _this.handleToggleAction = _this.handleToggleAction.bind(_assertThisInitialized(_this));
    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this));
    _this.handleRollback = _this.handleRollback.bind(_assertThisInitialized(_this));
    _this.handleSweep = _this.handleSweep.bind(_assertThisInitialized(_this));
    _this.handleCommit = _this.handleCommit.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(ChartMonitor, [{
    key: "handleRollback",
    value: function handleRollback() {
      this.props.dispatch(rollback());
    }
  }, {
    key: "handleSweep",
    value: function handleSweep() {
      this.props.dispatch(sweep());
    }
  }, {
    key: "handleCommit",
    value: function handleCommit() {
      this.props.dispatch(commit());
    }
  }, {
    key: "handleToggleAction",
    value: function handleToggleAction(id) {
      this.props.dispatch(toggleAction(id));
    }
  }, {
    key: "handleReset",
    value: function handleReset() {
      this.props.dispatch(reset());
    }
  }, {
    key: "getTheme",
    value: function getTheme() {
      var _this$props = this.props,
          theme = _this$props.theme,
          invertTheme = _this$props.invertTheme;

      if (typeof theme !== 'string') {
        return invertTheme ? invertColors(theme) : theme;
      }

      if (typeof themes[theme] !== 'undefined') {
        return invertTheme ? invertColors(themes[theme]) : themes[theme];
      } // eslint-disable-next-line no-console


      console.warn('DevTools theme ' + theme + ' not found, defaulting to nicinabox');
      return invertTheme ? invertColors(themes.nicinabox) : themes.nicinabox;
    }
  }, {
    key: "getChartStyle",
    value: function getChartStyle() {
      var theme = this.getTheme();
      return {
        width: '100%',
        height: '100%',
        node: {
          colors: {
            "default": theme.base0B,
            collapsed: theme.base0B,
            parent: theme.base0E
          },
          radius: 7
        },
        text: {
          colors: {
            "default": theme.base0D,
            hover: theme.base06
          }
        }
      };
    }
  }, {
    key: "getChartOptions",
    value: function getChartOptions() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var computedStates = props.computedStates;
      var theme = this.getTheme();
      var tooltipOptions = {
        disabled: false,
        offset: {
          left: 30,
          top: 10
        },
        indentationSize: 2,
        style: {
          'background-color': theme.base06,
          opacity: '0.7',
          'border-radius': '5px',
          padding: '5px'
        }
      };
      var defaultOptions = {
        state: computedStates.length ? computedStates[props.currentStateIndex].state : null,
        isSorted: false,
        heightBetweenNodesCoeff: 1,
        widthBetweenNodesCoeff: 1.3,
        tooltipOptions: tooltipOptions,
        style: this.getChartStyle()
      };
      return (0, _deepmerge["default"])(defaultOptions, props);
    }
  }, {
    key: "render",
    value: function render() {
      var theme = this.getTheme();
      return /*#__PURE__*/_react["default"].createElement("div", {
        style: _objectSpread(_objectSpread({}, styles.container), {}, {
          backgroundColor: theme.base07
        })
      }, /*#__PURE__*/_react["default"].createElement(_Chart["default"], this.getChartOptions()));
    }
  }]);

  return ChartMonitor;
}(_react.Component);

_defineProperty(ChartMonitor, "update", _reducers["default"]);

_defineProperty(ChartMonitor, "propTypes", {
  dispatch: _propTypes["default"].func,
  computedStates: _propTypes["default"].array,
  currentStateIndex: _propTypes["default"].number,
  actionsById: _propTypes["default"].object,
  stagedActionIds: _propTypes["default"].array,
  skippedActionIds: _propTypes["default"].array,
  monitorState: _propTypes["default"].shape({
    initialScrollTop: _propTypes["default"].number
  }),
  preserveScrollTop: _propTypes["default"].bool,
  select: _propTypes["default"].func.isRequired,
  theme: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].string]),
  invertTheme: _propTypes["default"].bool
});

_defineProperty(ChartMonitor, "defaultProps", {
  select: function select(state) {
    return state;
  },
  theme: 'nicinabox',
  preserveScrollTop: true,
  invertTheme: false
});

var _default = ChartMonitor;
exports["default"] = _default;