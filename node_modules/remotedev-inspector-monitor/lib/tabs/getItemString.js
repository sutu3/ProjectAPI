'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _immutable = require('immutable');

var _isIterable = require('../utils/isIterable');

var _isIterable2 = _interopRequireDefault(_isIterable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_IMMUTABLE_KEY = '@@__IS_IMMUTABLE__@@';

function isImmutable(value) {
  return _immutable.Iterable.isKeyed(value) || _immutable.Iterable.isIndexed(value) || _immutable.Iterable.isIterable(value);
}

function getShortTypeString(val, diff) {
  if (diff && Array.isArray(val)) {
    val = val[val.length === 2 ? 1 : 0];
  }

  if ((0, _isIterable2.default)(val) && !isImmutable(val)) {
    return '(…)';
  } else if (Array.isArray(val)) {
    return val.length > 0 ? '[…]' : '[]';
  } else if (val === null) {
    return 'null';
  } else if (val === undefined) {
    return 'undef';
  } else if ((typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) === 'object') {
    return (0, _keys2.default)(val).length > 0 ? '{…}' : '{}';
  } else if (typeof val === 'function') {
    return 'fn';
  } else if (typeof val === 'string') {
    return '"' + (val.substr(0, 10) + (val.length > 10 ? '…' : '')) + '"';
  } else if ((typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) === 'symbol') {
    return 'symbol';
  } else {
    return val;
  }
}

function getText(type, data, isWideLayout, isDiff) {
  if (type === 'Object') {
    var keys = (0, _keys2.default)(data);
    if (!isWideLayout) return keys.length ? '{…}' : '{}';

    var str = keys.slice(0, 3).map(function (key) {
      return key + ': ' + getShortTypeString(data[key], isDiff);
    }).concat(keys.length > 3 ? ['…'] : []).join(', ');

    return '{ ' + str + ' }';
  } else if (type === 'Array') {
    if (!isWideLayout) return data.length ? '[…]' : '[]';

    var _str = data.slice(0, 4).map(function (val) {
      return getShortTypeString(val, isDiff);
    }).concat(data.length > 4 ? ['…'] : []).join(', ');

    return '[' + _str + ']';
  } else {
    return type;
  }
}

var getItemString = function getItemString(styling, type, data, dataTypeKey, isWideLayout, isDiff) {
  return _react2.default.createElement(
    'span',
    styling('treeItemHint'),
    data[IS_IMMUTABLE_KEY] ? 'Immutable' : '',
    dataTypeKey && data[dataTypeKey] ? data[dataTypeKey] + ' ' : '',
    getText(type, data, isWideLayout, isDiff)
  );
};

exports.default = getItemString;