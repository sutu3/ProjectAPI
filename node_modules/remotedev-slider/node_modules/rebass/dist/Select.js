'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

var _Label = require('./Label');

var _Label2 = _interopRequireDefault(_Label);

var _Text = require('./Text');

var _Text2 = _interopRequireDefault(_Text);

var _Arrow = require('./Arrow');

var _Arrow2 = _interopRequireDefault(_Arrow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Select form control with label
 */

var Select = function Select(_ref) {
  var label = _ref.label;
  var name = _ref.name;
  var options = _ref.options;
  var message = _ref.message;
  var hideLabel = _ref.hideLabel;
  var horizontal = _ref.horizontal;
  var baseRef = _ref.baseRef;
  var children = _ref.children;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['label', 'name', 'options', 'message', 'hideLabel', 'horizontal', 'baseRef', 'children', 'className', 'style', 'theme', 'subComponentStyles']);

  var scale = theme.scale;
  var colors = theme.colors;
  var borderColor = theme.borderColor;
  var borderRadius = theme.borderRadius;


  var invalid = props['aria-invalid'] || props.invalid;

  var cx = (0, _classnames2.default)('Select', className, {
    'isInvalid': invalid,
    'isDisabled': props.disabled,
    'isReadonly': props.readOnly
  });

  var color = style.color;
  var backgroundColor = style.backgroundColor;

  var rootStyle = _objectWithoutProperties(style, ['color', 'backgroundColor']);

  var sx = {
    root: _extends({
      display: horizontal ? 'flex' : null,
      alignItems: horizontal ? 'baseline' : null,
      marginBottom: scale[2],
      color: invalid ? colors.error : null
    }, rootStyle),
    select: _extends({
      fontFamily: 'inherit',
      fontSize: 'inherit',
      boxSizing: 'border-box',
      display: 'block',
      width: '100%',
      paddingLeft: scale[1],
      paddingRight: scale[3],
      height: scale[3],
      color: color || 'inherit',
      backgroundColor: backgroundColor || 'transparent',
      backgroundImage: 'none',
      borderWidth: 1,
      borderStyle: 'solid',
      borderColor: invalid ? colors.error : borderColor,
      borderRadius: borderRadius,
      MozAppearance: 'none',
      WebkitAppearance: 'none'
    }, style.fill, subComponentStyles.select),
    label: _extends({
      paddingRight: horizontal ? scale[1] : null,
      minWidth: horizontal ? 96 : null
    }, subComponentStyles.label),
    wrapper: _extends({
      position: 'relative',
      flex: horizontal ? '1 1 auto' : null
    }, subComponentStyles.wrapper),
    arrow: _extends({
      position: 'absolute',
      right: 0,
      top: 0,
      margin: scale[3] / 2,
      transform: 'translate(50%, -50%)'
    }, subComponentStyles.arrow),
    message: _extends({
      paddingLeft: horizontal ? scale[1] : null
    }, subComponentStyles.label)
  };

  var selectOptions = options.map(function (opt, i) {
    return (typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) === 'object' ? _react2.default.createElement('option', _extends({ key: i }, opt)) : _react2.default.createElement('option', { key: i, children: opt });
  });

  return _react2.default.createElement(
    'div',
    {
      className: cx,
      style: sx.root },
    _react2.default.createElement(_Label2.default, {
      htmlFor: name,
      hide: hideLabel,
      style: sx.label,
      children: label }),
    _react2.default.createElement(
      'div',
      { style: sx.wrapper },
      _react2.default.createElement(
        'select',
        _extends({}, props, {
          ref: baseRef,
          name: name,
          style: sx.select }),
        selectOptions
      ),
      _react2.default.createElement(_Arrow2.default, { style: sx.arrow })
    ),
    message && _react2.default.createElement(_Text2.default, {
      small: true,
      style: sx.message,
      children: message })
  );
};

Select.propTypes = {
  /** Label for form element */
  label: _react2.default.PropTypes.string.isRequired,
  /** Name attribute for form element */
  name: _react2.default.PropTypes.string.isRequired,
  /** Options for select */
  options: _react2.default.PropTypes.array.isRequired,
  /** Adds a helper or error message below the select */
  message: _react2.default.PropTypes.string,
  /** Hides the form element label */
  hideLabel: _react2.default.PropTypes.bool,
  /** Displays label to the left */
  horizontal: _react2.default.PropTypes.bool,
  /** Adds a ref to the select element */
  baseRef: _react2.default.PropTypes.func
};

Select.defaultProps = {
  options: []
};

Select._name = 'Select';

exports.default = (0, _withRebass2.default)(Select);