'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Generic box with visual styling
 */

var Block = function Block(_ref, _ref2) {
  var borderColor = _ref.borderColor;
  var border = _ref.border;
  var borderTop = _ref.borderTop;
  var borderRight = _ref.borderRight;
  var borderBottom = _ref.borderBottom;
  var borderLeft = _ref.borderLeft;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['borderColor', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft', 'className', 'style', 'theme', 'subComponentStyles']);

  var rebass = _ref2.rebass;
  var colors = theme.colors;


  borderColor = colors[borderColor] || borderColor || colors.primary;

  var cx = (0, _classnames2.default)('Block', className);

  var sx = _extends({
    borderStyle: border ? 'solid' : 'none',
    borderTopStyle: borderTop ? 'solid' : null,
    borderRightStyle: borderRight ? 'solid' : null,
    borderBottomStyle: borderBottom ? 'solid' : null,
    borderLeftStyle: borderLeft ? 'solid' : null,
    borderWidth: 4,
    borderColor: borderColor
  }, style);

  return _react2.default.createElement('div', _extends({}, props, {
    className: cx,
    style: sx }));
};

Block.propTypes = {
  /** Border color - can either be a key from the theme colors object or any color value */
  borderColor: _react2.default.PropTypes.string,
  /** Adds a border */
  border: _react2.default.PropTypes.bool,
  /** Adds a border to the top side */
  borderTop: _react2.default.PropTypes.bool,
  /** Adds a border to the right side */
  borderRight: _react2.default.PropTypes.bool,
  /** Adds a border to the bottom side */
  borderBottom: _react2.default.PropTypes.bool,
  /** Adds a border to the left side */
  borderLeft: _react2.default.PropTypes.bool
};

Block._name = 'Block';

exports.default = (0, _withRebass2.default)(Block);