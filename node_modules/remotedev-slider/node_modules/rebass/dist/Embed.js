'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Responsive media embed wrapper
 */

var Embed = function Embed(_ref) {
  var ratio = _ref.ratio;
  var children = _ref.children;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['ratio', 'children', 'className', 'style', 'theme', 'subComponentStyles']);

  var cx = (0, _classnames2.default)('Embed', className);

  var sx = _extends({
    position: 'relative',
    height: 0,
    padding: 0,
    paddingBottom: ratio * 100 + '%',
    overflow: 'hidden'
  }, style);

  var childProps = {
    style: _extends({
      position: 'absolute',
      width: '100%',
      height: '100%',
      top: 0,
      bottom: 0,
      left: 0,
      border: 0
    }, subComponentStyles.children)
  };

  var styledChildren = _react2.default.Children.map(children, function (child) {
    return _react2.default.cloneElement(child, childProps);
  });

  return _react2.default.createElement('div', _extends({}, props, {
    className: cx,
    children: styledChildren,
    style: sx }));
};

Embed.propTypes = {
  /**
   * Aspect ratio for the embed.
   * Divide height over width to calculate.
   * E.g. ratio={9/16}
   */
  ratio: _react2.default.PropTypes.number
};

Embed.defaultProps = {
  ratio: 9 / 16
};

Embed._name = 'Embed';

exports.default = (0, _withRebass2.default)(Embed);