'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Fixed positioned overlay for use with modal dialogs
 */

var Overlay = function Overlay(_ref) {
  var open = _ref.open;
  var dark = _ref.dark;
  var fullWidth = _ref.fullWidth;
  var box = _ref.box;
  var onDismiss = _ref.onDismiss;
  var children = _ref.children;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['open', 'dark', 'fullWidth', 'box', 'onDismiss', 'children', 'className', 'style', 'theme', 'subComponentStyles']);

  var zIndex = theme.zIndex;
  var scale = theme.scale;
  var colors = theme.colors;
  var borderRadius = theme.borderRadius;


  var cx = (0, _classnames2.default)('Overlay', className);

  var innerStyle = _extends({
    padding: scale[3],
    backgroundColor: colors.white,
    borderRadius: borderRadius
  }, subComponentStyles.box);

  var sx = {
    root: _extends({
      position: 'fixed',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      zIndex: zIndex[2],
      display: open ? 'flex' : 'none',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center'
    }, subComponentStyles.background),
    dismiss: _extends({
      position: 'fixed',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      backgroundColor: dark ? colors.black : colors.white,
      opacity: 0.875
    }, subComponentStyles.dismiss),
    inner: _extends({
      position: 'relative',
      zIndex: zIndex[1],
      minWidth: 320,
      width: fullWidth ? '100%' : null
    }, style, box ? innerStyle : {})
  };

  return _react2.default.createElement(
    'div',
    {
      className: cx,
      style: sx.root },
    _react2.default.createElement('div', { style: sx.dismiss,
      onClick: onDismiss }),
    _react2.default.createElement('div', _extends({}, props, {
      style: sx.inner,
      children: children }))
  );
};

Overlay.propTypes = {
  /** Shows and hides overlay */
  open: _react2.default.PropTypes.bool,
  /** Sets dark transparent overlay style */
  dark: _react2.default.PropTypes.bool,
  /** Sets padding and background white for the content container */
  box: _react2.default.PropTypes.bool,
  /** Sets content container full width */
  fullWidth: _react2.default.PropTypes.bool,
  /** Click event callback for the Overlay background */
  onDismiss: _react2.default.PropTypes.func
};

Overlay.defaultProps = {
  open: false,
  dark: true,
  onDismiss: function onDismiss() {}
};

Overlay._name = 'Overlay';

exports.default = (0, _withRebass2.default)(Overlay);