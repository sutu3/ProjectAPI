'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Link for use in navigation. Inherits color
 */

var NavItem = function NavItem(_ref) {
  var small = _ref.small;
  var active = _ref.active;
  var baseRef = _ref.baseRef;
  var is = _ref.is;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['small', 'active', 'baseRef', 'is', 'className', 'style', 'theme', 'subComponentStyles']);

  var fontSizes = theme.fontSizes;
  var scale = theme.scale;
  var bold = theme.bold;


  var cx = (0, _classnames2.default)('NavItem', className);

  var activeStyle = active ? subComponentStyles.active : {};

  var sx = _extends({
    fontSize: small ? fontSizes[6] : fontSizes[5],
    fontWeight: bold,
    lineHeight: '1rem',
    textDecoration: 'none',
    display: 'flex',
    alignItems: 'center',
    alignSelf: 'stretch',
    paddingTop: small ? scale[1] / 2 : scale[1],
    paddingBottom: small ? scale[1] / 2 : scale[1],
    paddingLeft: scale[1],
    paddingRight: scale[1],
    color: 'inherit',
    cursor: 'pointer'
  }, style, activeStyle);

  var Comp = is || 'a';

  return _react2.default.createElement(Comp, _extends({}, props, {
    ref: baseRef,
    className: cx,
    style: sx }));
};

NavItem.propTypes = {
  /** Sets active styles */
  active: _react2.default.PropTypes.bool,
  /** Sets a smaller font size for compact UI */
  small: _react2.default.PropTypes.bool,
  /** Adds a ref to the link element */
  baseRef: _react2.default.PropTypes.func
};

NavItem._name = 'NavItem';

exports.default = (0, _withRebass2.default)(NavItem);