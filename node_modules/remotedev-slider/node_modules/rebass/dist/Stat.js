'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _withRebass = require('./withRebass');

var _withRebass2 = _interopRequireDefault(_withRebass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Styled number display for statistics
 */

var Stat = function Stat(_ref) {
  var value = _ref.value;
  var label = _ref.label;
  var unit = _ref.unit;
  var topLabel = _ref.topLabel;
  var className = _ref.className;
  var style = _ref.style;
  var theme = _ref.theme;
  var subComponentStyles = _ref.subComponentStyles;

  var props = _objectWithoutProperties(_ref, ['value', 'label', 'unit', 'topLabel', 'className', 'style', 'theme', 'subComponentStyles']);

  var fontSizes = theme.fontSizes;
  var bold = theme.bold;
  var scale = theme.scale;


  var cx = (0, _classnames2.default)('Stat', className);

  var sx = {
    root: _extends({
      display: 'inline-block'
    }, style),
    value: _extends({
      fontSize: fontSizes[0],
      letterSpace: '-.125em',
      fontWeight: bold,
      lineHeight: 1,
      marginTop: topLabel ? scale[1] / 2 : null,
      marginBottom: topLabel ? null : scale[1] / 2
    }, subComponentStyles.value),
    unit: _extends({
      fontSize: fontSizes[3]
    }, subComponentStyles.unit),
    label: _extends({
      fontSize: fontSizes[6],
      fontWeight: bold,
      lineHeight: 1
    }, subComponentStyles.label)
  };

  return _react2.default.createElement(
    'div',
    _extends({}, props, {
      className: cx,
      style: sx.root }),
    topLabel && _react2.default.createElement(
      'div',
      { style: sx.label },
      label
    ),
    _react2.default.createElement(
      'div',
      { style: sx.value },
      value,
      unit && _react2.default.createElement(
        'span',
        { style: sx.unit },
        unit
      )
    ),
    !topLabel && _react2.default.createElement(
      'div',
      { style: sx.label },
      label
    )
  );
};

Stat.propTypes = {
  /** Value for stat shown in large font size */
  value: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string]),
  /** Optional unit for displaying next to value */
  unit: _react2.default.PropTypes.string,
  /** Label for stat */
  label: _react2.default.PropTypes.string,
  /** Displays label above value */
  topLabel: _react2.default.PropTypes.bool
};

Stat._name = 'Stat';

exports.default = (0, _withRebass2.default)(Stat);