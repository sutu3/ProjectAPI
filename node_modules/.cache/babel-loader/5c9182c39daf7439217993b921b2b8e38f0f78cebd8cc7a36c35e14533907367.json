{"ast":null,"code":"// const init=[\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\n//     ]\n\n// const TodoListSlice=(state=init,action)=>{\n//     switch(action.type)\n//     {\n//         case 'todoList/addTodo':\n//             return [\n//                     ...state,\n//                     action.payload\n//                 ]\n//         case 'todoList/changeCompleted':\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\n//         default:\n//             return state;\n//     }\n// }\n// export default TodoListSlice\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst TodoListSlice1 = createSlice({\n  name: \"todoList\",\n  initialState: {\n    status: \"idle\",\n    todos: []\n  },\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    changeCompleted: (state, action) => {\n      return state.map(el => el.id === action.payload ? {\n        ...el,\n        completed: !el.completed\n      } : el);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(FetchTodos.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(FetchTodos.fulfilled, (state, action) => {\n      state.todos = action.payload;\n      state.status = \"idle\";\n    }).addCase(addNewTodo.pending, (state, action) => {\n      state.todos = action.payload;\n    });\n  }\n});\nexport const FetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\n  const res = await fetch(\"/api/todos\");\n  const data = await res.json();\n  console.log(\"1\");\n  console.log({\n    data\n  });\n  return data.todos;\n});\nexport const addNewTodo = createAsyncThunk(\"todos/addNewTodo\", async NewTodo => {\n  const res = await fetch(\"/api/todos\", {\n    method: \"POST\",\n    body: JSON.stringify(NewTodo)\n  });\n  console.log({\n    data\n  });\n  const data = await res.json();\n  console.log({\n    data\n  });\n});\nexport default TodoListSlice1;\n\n// export function addToDos(todo){\n//     return function addTodosThunk(dispatch,getState){\n//         console.log(getState())\n//         console.log({todo})\n//         todo.name='Đại đã Update dữ liệu'\n//         dispatch(TodoListSlice.actions.addTodo(todo))\n//         console.log('Update', getState())\n//     }\n// }","map":{"version":3,"names":["createAsyncThunk","createSlice","TodoListSlice1","name","initialState","status","todos","reducers","addTodo","state","action","push","payload","changeCompleted","map","el","id","completed","extraReducers","builder","addCase","FetchTodos","pending","fulfilled","addNewTodo","res","fetch","data","json","console","log","NewTodo","method","body","JSON","stringify"],"sources":["D:/react/todolist/src/Component/TodoList/TodoListSlide.js"],"sourcesContent":["// const init=[\r\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\r\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\r\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\r\n//     ]\r\n\r\n// const TodoListSlice=(state=init,action)=>{\r\n//     switch(action.type)\r\n//     {\r\n//         case 'todoList/addTodo':\r\n//             return [\r\n//                     ...state,\r\n//                     action.payload\r\n//                 ]\r\n//         case 'todoList/changeCompleted':\r\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n// export default TodoListSlice\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nconst TodoListSlice1 = createSlice({\r\n  name: \"todoList\",\r\n  initialState: { status: \"idle\", todos: [] },\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    changeCompleted: (state, action) => {\r\n      return state.map((el) =>\r\n        el.id === action.payload ? { ...el, completed: !el.completed } : el\r\n      );\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(FetchTodos.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(FetchTodos.fulfilled, (state, action) => {\r\n        state.todos = action.payload;\r\n        state.status = \"idle\";\r\n      })\r\n      .addCase(addNewTodo.pending, (state, action) => {\r\n        state.todos = action.payload;\r\n      });\r\n  },\r\n});\r\nexport const FetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\r\n  const res = await fetch(\"/api/todos\");\r\n  const data = await res.json();\r\n  console.log(\"1\");\r\n  console.log({ data });\r\n  return data.todos;\r\n});\r\nexport const addNewTodo = createAsyncThunk(\r\n  \"todos/addNewTodo\",\r\n  async (NewTodo) => {\r\n    const res = await fetch(\"/api/todos\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(NewTodo),\r\n    });\r\n    console.log({ data });\r\n    const data = await res.json();\r\n    console.log({ data });\r\n  }\r\n);\r\nexport default TodoListSlice1;\r\n\r\n// export function addToDos(todo){\r\n//     return function addTodosThunk(dispatch,getState){\r\n//         console.log(getState())\r\n//         console.log({todo})\r\n//         todo.name='Đại đã Update dữ liệu'\r\n//         dispatch(TodoListSlice.actions.addTodo(todo))\r\n//         console.log('Update', getState())\r\n//     }\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC;EAC3CC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,eAAe,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAClC,OAAOD,KAAK,CAACK,GAAG,CAAEC,EAAE,IAClBA,EAAE,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,GAAG;QAAE,GAAGG,EAAE;QAAEE,SAAS,EAAE,CAACF,EAAE,CAACE;MAAU,CAAC,GAAGF,EACnE,CAAC;IACH;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACC,UAAU,CAACE,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACJ,MAAM,GAAG,MAAM;IACvB,CAAC,CAAC,CACDe,OAAO,CAACI,UAAU,CAACF,OAAO,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAMS,UAAU,GAAGrB,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMyB,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;EACrC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChBD,OAAO,CAACC,GAAG,CAAC;IAAEH;EAAK,CAAC,CAAC;EACrB,OAAOA,IAAI,CAACrB,KAAK;AACnB,CAAC,CAAC;AACF,OAAO,MAAMkB,UAAU,GAAGxB,gBAAgB,CACxC,kBAAkB,EAClB,MAAO+B,OAAO,IAAK;EACjB,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IACpCM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;EAC9B,CAAC,CAAC;EACFF,OAAO,CAACC,GAAG,CAAC;IAAEH;EAAK,CAAC,CAAC;EACrB,MAAMA,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC;IAAEH;EAAK,CAAC,CAAC;AACvB,CACF,CAAC;AACD,eAAezB,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}