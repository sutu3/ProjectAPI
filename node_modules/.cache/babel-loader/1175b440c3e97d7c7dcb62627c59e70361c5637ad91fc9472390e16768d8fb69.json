{"ast":null,"code":"// const init=[\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\n//     ]\n\n// const TodoListSlice=(state=init,action)=>{\n//     switch(action.type)\n//     {\n//         case 'todoList/addTodo':\n//             return [\n//                     ...state,\n//                     action.payload\n//                 ]\n//         case 'todoList/changeCompleted':\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\n//         default:\n//             return state;\n//     }\n// }\n// export default TodoListSlice\nimport { createSlice } from '@reduxjs/toolkit';\nconst TodoListSlice = createSlice({\n  name: 'todoList',\n  initialState: [{\n    id: 1,\n    name: 'Learnn Yoga',\n    completed: false,\n    priority: 'Medium'\n  }, {\n    id: 2,\n    name: 'Learnn Redux',\n    completed: true,\n    priority: 'Low'\n  }, {\n    id: 3,\n    name: 'Learnn React',\n    completed: false,\n    priority: 'Hight'\n  }],\n  reducers: {\n    addTodo: () => {\n      state;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","TodoListSlice","name","initialState","id","completed","priority","reducers","addTodo","state"],"sources":["D:/react/todolist/src/Component/TodoList/TodoListSlide.js"],"sourcesContent":["// const init=[\r\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\r\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\r\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\r\n//     ]\r\n\r\n// const TodoListSlice=(state=init,action)=>{\r\n//     switch(action.type)\r\n//     {\r\n//         case 'todoList/addTodo':\r\n//             return [\r\n//                     ...state,\r\n//                     action.payload\r\n//                 ]\r\n//         case 'todoList/changeCompleted':\r\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n// export default TodoListSlice\r\nimport {createSlice} from '@reduxjs/toolkit'\r\nconst TodoListSlice = createSlice({\r\n    name:'todoList',\r\n    initialState:[\r\n        {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\r\n        {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\r\n        {id:3,name:'Learnn React',completed:false,priority:'Hight'},\r\n    ],\r\n    reducers:{\r\n        addTodo:()=>{\r\n            state\r\n        }\r\n    }\r\n})"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAC,UAAU;EACfC,YAAY,EAAC,CACT;IAACC,EAAE,EAAC,CAAC;IAACF,IAAI,EAAC,aAAa;IAACG,SAAS,EAAC,KAAK;IAACC,QAAQ,EAAC;EAAQ,CAAC,EAC3D;IAACF,EAAE,EAAC,CAAC;IAACF,IAAI,EAAC,cAAc;IAACG,SAAS,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAK,CAAC,EACxD;IAACF,EAAE,EAAC,CAAC;IAACF,IAAI,EAAC,cAAc;IAACG,SAAS,EAAC,KAAK;IAACC,QAAQ,EAAC;EAAO,CAAC,CAC9D;EACDC,QAAQ,EAAC;IACLC,OAAO,EAACA,CAAA,KAAI;MACRC,KAAK;IACT;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}