{"ast":null,"code":"// const init=[\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\n//     ]\n\n// const TodoListSlice=(state=init,action)=>{\n//     switch(action.type)\n//     {\n//         case 'todoList/addTodo':\n//             return [\n//                     ...state,\n//                     action.payload\n//                 ]\n//         case 'todoList/changeCompleted':\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\n//         default:\n//             return state;\n//     }\n// }\n// export default TodoListSlice\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst TodoListSlice = createSlice({\n  name: 'todoList',\n  initialState: {\n    status: 'idle',\n    todos: []\n  },\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    changeCompleted: (state, action) => {\n      return state.map(el => el.id === action.payload ? {\n        ...el,\n        completed: !el.completed\n      } : el);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchTodos.fulfilled, (state, action) => {\n      state.todos = action.payload;\n      state.status = 'idle';\n    });\n  }\n});\nexport default TodoListSlice1;\nexport const fetchTodos = createAsyncThunk = ('todos/fetchTodos', async () => {\n  const res = await fetch('/api/todos');\n  return res.todos;\n});\n\n// export function addToDos(todo){\n//     return function addTodosThunk(dispatch,getState){\n//         console.log(getState())\n//         console.log({todo})\n//         todo.name='Đại đã Update dữ liệu'\n//         dispatch(TodoListSlice.actions.addTodo(todo))\n//         console.log('Update', getState())\n//     }\n// }","map":{"version":3,"names":["createAsyncThunk","createSlice","TodoListSlice","name","initialState","status","todos","reducers","addTodo","state","action","push","payload","changeCompleted","map","el","id","completed","extraReducers","builder","addCase","fetchTodos","pending","fulfilled","TodoListSlice1","res","fetch"],"sources":["D:/react/todolist/src/Component/TodoList/TodoListSlide.js"],"sourcesContent":["// const init=[\r\n//         {id:1,name:'Learnn Yoga',completed:false,priority:'Medium'},\r\n//         {id:2,name:'Learnn Redux',completed:true,priority:'Low'},\r\n//         {id:3,name:'Learnn React',completed:false,priority:'Hight'},\r\n//     ]\r\n\r\n// const TodoListSlice=(state=init,action)=>{\r\n//     switch(action.type)\r\n//     {\r\n//         case 'todoList/addTodo':\r\n//             return [\r\n//                     ...state,\r\n//                     action.payload\r\n//                 ]\r\n//         case 'todoList/changeCompleted':\r\n//             return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n// export default TodoListSlice\r\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nconst TodoListSlice = createSlice({\r\n    name:'todoList',\r\n    initialState:{status:'idle',todos:[]},\r\n    reducers:{\r\n        addTodo:(state,action)=>{\r\n            state.push(action.payload)\r\n        },\r\n        changeCompleted:(state,action)=>{\r\n            return state.map((el)=>el.id===action.payload ?{...el,completed:!el.completed}:el)\r\n        }\r\n  },\r\n  extraReducers:builder=>{\r\n    builder.addCase(\r\n        fetchTodos.pending,(state,action)=>{\r\n            state.status='loading'\r\n        }\r\n    ).addCase(fetchTodos.fulfilled,(state,action)=>{\r\n        state.todos=action.payload;\r\n        state.status='idle';\r\n    })\r\n  }\r\n})\r\nexport default TodoListSlice1\r\nexport const fetchTodos=createAsyncThunk=('todos/fetchTodos',async()=>{\r\n    const res=await fetch('/api/todos');\r\n    return res.todos;\r\n})\r\n\r\n\r\n\r\n// export function addToDos(todo){\r\n//     return function addTodosThunk(dispatch,getState){\r\n//         console.log(getState())\r\n//         console.log({todo})\r\n//         todo.name='Đại đã Update dữ liệu'\r\n//         dispatch(TodoListSlice.actions.addTodo(todo))\r\n//         console.log('Update', getState())\r\n//     }\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAC9D,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAC,UAAU;EACfC,YAAY,EAAC;IAACC,MAAM,EAAC,MAAM;IAACC,KAAK,EAAC;EAAE,CAAC;EACrCC,QAAQ,EAAC;IACLC,OAAO,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,eAAe,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MAC5B,OAAOD,KAAK,CAACK,GAAG,CAAEC,EAAE,IAAGA,EAAE,CAACC,EAAE,KAAGN,MAAM,CAACE,OAAO,GAAE;QAAC,GAAGG,EAAE;QAACE,SAAS,EAAC,CAACF,EAAE,CAACE;MAAS,CAAC,GAACF,EAAE,CAAC;IACtF;EACN,CAAC;EACDG,aAAa,EAACC,OAAO,IAAE;IACrBA,OAAO,CAACC,OAAO,CACXC,UAAU,CAACC,OAAO,EAAC,CAACb,KAAK,EAACC,MAAM,KAAG;MAC/BD,KAAK,CAACJ,MAAM,GAAC,SAAS;IAC1B,CACJ,CAAC,CAACe,OAAO,CAACC,UAAU,CAACE,SAAS,EAAC,CAACd,KAAK,EAACC,MAAM,KAAG;MAC3CD,KAAK,CAACH,KAAK,GAACI,MAAM,CAACE,OAAO;MAC1BH,KAAK,CAACJ,MAAM,GAAC,MAAM;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,eAAemB,cAAc;AAC7B,OAAO,MAAMH,UAAU,GAACrB,gBAAgB,IAAE,kBAAkB,EAAC,YAAS;EAClE,MAAMyB,GAAG,GAAC,MAAMC,KAAK,CAAC,YAAY,CAAC;EACnC,OAAOD,GAAG,CAACnB,KAAK;AACpB,CAAC,CAAC;;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}