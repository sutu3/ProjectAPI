{"ast":null,"code":"import { createServer, Model } from 'miragejs';\nexport const SetupServer = () => {\n  let serve = createServer({\n    models: {\n      todos: Model\n    },\n    routes() {\n      this.get('/api/todo', schema => {\n        return schema.todos.all();\n      });\n      this.post('/api/todo1', (schema, request) => {\n        const payload = JSON.parse(request.requestBody);\n        return schema.todos.create(payload);\n      });\n    }\n  });\n};\n_c = SetupServer;\nvar _c;\n$RefreshReg$(_c, \"SetupServer\");","map":{"version":3,"names":["createServer","Model","SetupServer","serve","models","todos","routes","get","schema","all","post","request","payload","JSON","parse","requestBody","create","_c","$RefreshReg$"],"sources":["D:/react/todolist/src/Component/fakeapi/index.js"],"sourcesContent":["import { createServer, Model } from 'miragejs';\r\n\r\nexport const SetupServer = () => {\r\n    let serve=createServer({ \r\n    models: { todos: Model}, \r\n    routes() { \r\n        this.get('/api/todo', (schema) => { \r\n            return schema.todos.all(); });\r\n\r\n        this.post('/api/todo1', (schema, request) => {\r\n            const payload = JSON.parse(request.requestBody);\r\n            return schema.todos.create(payload);\r\n        });\r\n    },\r\n});\r\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,KAAK,QAAQ,UAAU;AAE9C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC7B,IAAIC,KAAK,GAACH,YAAY,CAAC;IACvBI,MAAM,EAAE;MAAEC,KAAK,EAAEJ;IAAK,CAAC;IACvBK,MAAMA,CAAA,EAAG;MACL,IAAI,CAACC,GAAG,CAAC,WAAW,EAAGC,MAAM,IAAK;QAC9B,OAAOA,MAAM,CAACH,KAAK,CAACI,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC;MAEjC,IAAI,CAACC,IAAI,CAAC,YAAY,EAAE,CAACF,MAAM,EAAEG,OAAO,KAAK;QACzC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,WAAW,CAAC;QAC/C,OAAOP,MAAM,CAACH,KAAK,CAACW,MAAM,CAACJ,OAAO,CAAC;MACvC,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACF,CAAC;AAACK,EAAA,GAbWf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}